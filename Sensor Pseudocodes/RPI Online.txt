To Do:
    -change apn for sim (41-42)
    -change serial port (45-46)
    -Test if RPI can connect to internet


References:
    https://www.instructables.com/Raspberry-Pi-Nodejs-Blynk-App-DHT11DHT22AM2302/   
    https://www.instructables.com/Blynk-JavaScript-in-20-minutes-Raspberry-Pi-Edison/
    (3)https://circuitdigest.com/microcontroller-projects/how-to-tether-internet-on-raspberry-pi-using-sim800l-gsm-module
    (4) https://github.com/twilio/wireless-ppp-scripts

//ff is based on (3):
    //Check whether GSM works
        import time
        import serial
        import os, time
        cmd=''
        ser = serial.Serial('/dev/serial0', 9600, timeout=1)
        ser.reset_input_buffer()
        while True:
            smd=input("please enter a command: ")
            smd=smd+'\n'
            smds=smd.encode('utf-8')
            ser.write(smds)
            print("smd value is:",smd)
            line = ser.read(10).decode('utf-8').rstrip()
            print(line)
    //write "AT", if it returns "ok", GSM is working

    //RPI setup
    //updates pi
    sudo apt-get upgrade
    // get ppp library (4)
    sudo apt-get install ppp screen elinks
    //go to peers folder
    cd /etc/ppp/peers*
    
    //create file
    Initialize:
    nano rnet.py

    #code start
    #imis/internet is the apn for idea connection
        connect "/usr/sbin/chat -v -f /etc/chatscripts/gprs -T airtelgprs.com"
    # For Raspberry Pi4 use /dev/ttyS0 as the communication port:
        /dev/ttyS0
    # Baudrate
        115200
    # Assumes that your IP address is allocated dynamically by the ISP.
        noipdefault
    # Try to get the name server addresses from the ISP.
        usepeerdns
    # Use this connection as the default route to the internet.
        defaultroute
    # Makes PPPD "dial again" when the connection is lost.
        persist
    # Do not ask the remote to authenticate.
        noauth
    # No hardware flow control on the serial link with GSM Modem
        nocrtscts
    # No modem control lines with GSM Modem
        local
    #code end


    //commands to turn on and off
    sudo pon rnet
    sudo poff rnet
