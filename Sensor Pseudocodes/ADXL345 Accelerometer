reference: https://pimylifeup.com/raspberry-pi-accelerometer-adxl345/  - adxl345 library
            https://community.element14.com/learn/learning-center/stem-academy/b/blog/posts/a-raspberry-pi-data-logger-for-the-adxl345-accelerometer - datalogger guide

install via Cmd: 
-   sudo pip3 install adafruit-circuitpython-ADXL34x

initialize new python script: nano ~/accelerometer.py


import libraries:
-   Time    - put the script to sleep for a short period (idle time between each readings).
-   board - designed to quickly know what pins are available on a device.
-   busio -  handling the I2C serial protocol.
-   adafruit_adxl34x -accelerometer model
-   csv - puts logged data into csv in order to data log

initialize i2c interface:
        accelerometer = adafruit_adxl34x.ADXL345(i2c)

script to read accelerometer data

def accelerometer_data(accelerometer):

    while True:
        acceleration = accelerometer.acceleration //reads acceleration in x,y,z in terms of g
        meter_per_second converter = acceleration*9.8 // converts accelerometer data in g
        //send to data to GUI 
        time.sleep(0.5) // subject to calibration


def data_logger():

    // function to log data into csv file


things to calibrate:

-   sleep time
-   frequency of data logging
-   accelerometer readings and conversion from g to  m/s or to km/s


//full code

import time
import board
import busio
import adafruit_adxl34x

i2c = busio.I2C(board.SCL, board.SDA)
accelerometer = adafruit_adxl34x.ADXL345(i2c)
accelerometer.enable_freefall_detection(threshold=10, time=25)
accelerometer.enable_motion_detection(threshold=18)
accelerometer.enable_tap_detection(tap_count=1, threshold=20, duration=50, latency=20, window=255)

while True:
    print("%f %f %f"%accelerometer.acceleration)
    print("Dropped: %s"%accelerometer.events["freefall"])
    print("Tapped: %s"%accelerometer.events['tap'])
    print("Motion detected: %s"%accelerometer.events['motion'])
    time.sleep(0.5)
